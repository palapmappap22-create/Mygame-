workflows:
  build-android:
    name: Snake.Balest Full Build (robust)
    max_build_duration: 90
    instance_type: mac_mini_m1
    environment:
      vars:
        UNITY_PRIMARY: "2022.3.21f1"
        UNITY_FALLBACK: "2021.3.33f1"
        PROJECT_ZIP: "Snake.Balest.zip"
        PROJECT_DIR: "Snake.Balest"
    scripts:
      - name: Prepare project
        script: |
          set -e
          echo "🔹 Checking for $PROJECT_ZIP..."
          if [ -f "$PROJECT_ZIP" ]; then
            echo "📦 Found $PROJECT_ZIP - unzipping..."
            unzip -o "$PROJECT_ZIP" -d "$PROJECT_DIR" || true
          else
            echo "⚠️ $PROJECT_ZIP not found in repo root. Searching for any nested zip..."
            found=$(ls *.zip 2>/dev/null | head -n 1 || true)
            if [ -n "$found" ]; then
              echo "📦 Found $found - extracting into $PROJECT_DIR..."
              unzip -o "$found" -d "$PROJECT_DIR" || true
            else
              echo "❌ No zip file found. Exiting." >&2
              exit 1
            fi
          fi
          echo "📁 Listing project folder:"
          ls -la "$PROJECT_DIR" || true

      - name: Select Unity version
        script: |
          echo "🔹 Selecting Unity version..."
          if [ -d "/Applications/Unity/Hub/Editor/$UNITY_PRIMARY" ]; then
            UNITY_VERSION="$UNITY_PRIMARY"
          else
            echo "⚠️ Primary Unity not found. Falling back to $UNITY_FALLBACK"
            UNITY_VERSION="$UNITY_FALLBACK"
          fi
          echo "✅ Using Unity: $UNITY_VERSION"

      - name: Build APK (attempts and retry)
        script: |
          set -e
          cd "$PROJECT_DIR"
          UNITY_PATH="/Applications/Unity/Hub/Editor/$UNITY_VERSION/Unity"
          echo "🔹 UNITY_PATH = $UNITY_PATH"
          if [ -x "$UNITY_PATH" ]; then
            echo "🔨 Building APK... (first attempt)"
            "$UNITY_PATH" -batchmode -nographics -quit -projectPath . -executeMethod BuildScript.BuildAndroid -logFile /dev/stdout || true
          elif command -v unity-editor >/dev/null 2>&1; then
            echo "🔨 Using system unity-editor"
            unity-editor -batchmode -nographics -quit -projectPath . -executeMethod BuildScript.BuildAndroid -logFile /dev/stdout || true
          else
            echo "⚠️ Unity executable not found at expected paths. Build may fail." >&2
          fi
          # If APK not produced, attempt one more time
          if [ ! -f build/Snake.Balest.apk ]; then
            echo "⚠️ APK not found, retrying build with same Unity path..."
            if [ -x "$UNITY_PATH" ]; then
              "$UNITY_PATH" -batchmode -nographics -quit -projectPath . -executeMethod BuildScript.BuildAndroid -logFile /dev/stdout || true
            fi
          fi
          if [ ! -f build/Snake.Balest.apk ]; then
            echo "❌ Build failed to produce APK." >&2
            exit 2
          else
            echo "✅ APK produced at build/Snake.Balest.apk"
          fi
    artifacts:
      - $PROJECT_DIR/build/*.apk
